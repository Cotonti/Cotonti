/**
 * @package Cotonti
 * @copyright (c) Cotonti Team
 * @license https://github.com/Cotonti/Cotonti/blob/master/License.txt
 */
class CotontiApplication{async loadData(e){if(!e)return{};void 0===this.loadedData&&(this.loadedData={});let a=[];("string"==typeof e||e instanceof String)&&(e=[e]);for(let t of e)t in this.loadedData||a.push(t);if(a.length>0){let e=new URLSearchParams({n:"main",a:"get"});a.forEach(((a,t,n)=>{e.append("data["+t+"]",a)})),e.append("_ajax",1);try{let a=await fetch("index.php?"+e.toString());if(a.ok){const e=await a.json();if(e.success)for(const a in e.data)this.loadedData[a]=e.data[a]}}catch(e){}}let t={};for(let a of e)a in this.loadedData&&(t[a]=this.loadedData[a]);return t}loadCaptcha(){this.loadData(["captcha","x"]).then((e=>{let a=document.querySelectorAll(".captcha-place-holder");for(let t of a){t.innerHTML=e.captcha,this.executeScriptElements(t),t.classList.remove("captcha-place-holder","loading"),t.classList.add("captcha");const a=t.closest("form");if(null!==a){let t=a.querySelector('input[type="hidden"][name="x"]');null!==t&&t.setAttribute("value",e.x)}}}))}executeScriptElements(e){const a=e.querySelectorAll("script");Array.from(a).forEach((e=>{const a=document.createElement("script");Array.from(e.attributes).forEach((e=>{a.setAttribute(e.name,e.value)})),a.text=e.text,e.parentNode.replaceChild(a,e)}))}}let cot=new CotontiApplication;function encodeURIfix(e){return encodeURI(decodeURI(e)).replace(/%5B/g,"[").replace(/%5D/g,"]")}function getBaseHref(){var e=document.getElementsByTagName("base")[0].href;return null==e?"/":e}function popup(e,a,t){window.open(getBaseHref()+"index.php?o="+e,"","toolbar=0,location=0,directories=0,menuBar=0,resizable=0,scrollbars=yes,width="+a+",height="+t+",left=32,top=16")}function pfs(e,a,t,n){window.open(getBaseHref()+"index.php?e=pfs&userid="+e+"&c1="+a+"&c2="+t+"&parser="+n,"PFS","status=1, toolbar=0,location=0,directories=0,menuBar=0,resizable=1,scrollbars=yes,width=754,height=512,left=32,top=16")}function redirect(e){location.href=e.options[e.selectedIndex].value}function toggleblock(e){var a=document.getElementById(e);return"none"==a.style.display?a.style.display="":a.style.display="none",!1}function toggleAll(e){var a=document.querySelectorAll('[id^="blk_"]');for(i=0;i<a.length;i++)"hide"==e?a[i].style.display="none":"show"==e&&(a[i].style.display="table-row-group");return!1}function insertText(e,a,t){var n=null;e||(e=document);e:for(var o=0;o<e.forms.length;o++)for(var r=0;r<e.forms[o].elements.length;r++)if(e.forms[o].elements[r].name==a){n=e.forms[o].elements[r];break e}if(!n)return!1;if(e.selection)n.focus(),e.selection.createRange().text=t;else if(n.selectionStart||0==n.selectionStart){var i=n.selectionStart,s=n.selectionEnd;n.value=n.value.substring(0,i)+t+n.value.substring(s,n.value.length)}else n.value+=t;return!0}var ajaxErrorHandlers=new Array,ajaxSuccessHandlers=new Array,ajaxEnabled=!1;if("undefined"!=typeof jQuery)var ajaxCurrentBase=location.href.replace($("base").eq(0).attr("href"),"").replace(/\?.*$/,"").replace(/#.*$/,"");var ajaxUsed=!1,ajaxError=!1;function ajaxSend(e){var a=e.method?e.method.toUpperCase():"GET",t=e.data||"",n=e.url||$("#"+e.formId).attr("action");if("POST"===a)t+="&"+$("#"+e.formId).serialize();else if(e.formId){var o=n.indexOf("?")>0?"&":"?";n+=o+$("#"+e.formId).serialize()}return $.ajax({type:a,url:encodeURIfix(n),data:t,beforeSend:function(){e.nonshowloading||$("#"+e.divId).append('<span style="position:absolute; left:'+($("#"+e.divId).width()/2-110)+"px;top:"+($("#"+e.divId).height()/2-9)+'px;" class="loading" id="loading"><img src="./images/spinner.gif" alt="loading"/></span>').css("position","relative")},success:function(a){e.nonshowloading||$("#loading").remove(),e.nonshowfadein?$("#"+e.divId).html(a):$("#"+e.divId).hide().html(a).fadeIn(500);for(var t=0;t<ajaxSuccessHandlers.length;t++)ajaxSuccessHandlers[t].func?ajaxSuccessHandlers[t].func(a):ajaxSuccessHandlers[t](a)},error:function(a){if(e.nonshowloading||$("#loading").remove(),e.nonshowfadein?$("#"+e.divId).html(a):$("#"+e.divId).hide().html(a).fadeIn(500),ajaxErrorHandlers.length>0)for(var t=0;t<ajaxErrorHandlers.length;t++)ajaxErrorHandlers[t].func?ajaxErrorHandlers[t].func(a):ajaxErrorHandlers[t](a);else alert("AJAX error: "+a),ajaxError=!0}}),!1}function ajaxPageLoad(e){""!==e&&e.replace(/^#/,"");var a=e.match(/^get(-.*?)?;(.*)$/);if(a){var t=a[2].indexOf(";")>0?a[2].replace(";","?"):ajaxCurrentBase+"?"+decodeURIComponent(a[2]);return ajaxUsed=!0,ajaxSend({method:"GET",url:t,divId:a[1]?a[1].substr(1):"ajaxBlock"})}return""!==e||!ajaxUsed||ajaxSend({url:location.href.replace(/#.*$/,""),divId:"ajaxBlock"})}function ajaxFormLoad(e,a){var t=e.match(/^(get|post)(-.*?)?;(.*)$/);if(t){var n=t[3].indexOf(";")>0?t[3].replace(";","?"):ajaxCurrentBase+"?"+t[3];return ajaxUsed=!0,ajaxSend({method:t[1].toUpperCase(),url:n,divId:t[2]?t[2].substr(1):"ajaxBlock",formId:a})}return!0}function ajaxMakeHash(e,a,t){var n,o,r="post"==t?"post":"get",i="?",s=!!a&&a.match(/(get|post)(-[^ ;]+)?(;\S*)?/);return s&&(r=s[1],s[2]&&(r+=s[2]),s[3]&&(e=s[3].substr(1),i=";")),r+=";",e.indexOf(i)>0?(n=e.substr(0,e.indexOf(i)),o=e.substr(e.indexOf(i)+1),t&&"post"!=t&&(o+="&"+t)):(n=e,o="",t&&"post"!=t&&(o+=i+t)),r+=n==ajaxCurrentBase?o:n+";"+o}function bindHandlers(){("#comments"==location.hash||location.hash.match(/#c\d+/))&&$(".comments").css("display",""),$(".comments_link").click((function(){"none"==$(".comments").css("display")?$(".comments").css("display",""):$(".comments").css("display","none")})),location.href.match(/#comments/)&&$(".comments").css("display",""),ajaxEnabled&&($("body").on("submit","form.ajax",(function(){return"POST"==$(this).attr("method").toUpperCase()?ajaxFormLoad(ajaxMakeHash($(this).attr("action").replace(/#.*$/,""),$(this).attr("class"),"post"),$(this).attr("id")):window.location.hash=ajaxMakeHash($(this).attr("action").replace(/#.*$/,""),$(this).attr("class"),$(this).serialize()),ajaxError})),$("body").on("click","a.ajax",(function(){return window.location.hash=ajaxMakeHash($(this).attr("href").replace(/#.*$/,""),$(this).attr("rel")),ajaxError})),$("body").on("click","a.confirmLink",(function(){return!$(this).attr("href").match(/message.+920/i)||($("#confirmBox")&&$("#confirmBox").remove(),$("body").prepend('<div id="confirmBox" class="jqmWindow"></div>'),$("#confirmBox").jqm({ajax:$(this).attr("href"),modal:!0,onLoad:function(){$("#confirmBox").css("margin-left","-"+$("#confirmBox").width()/2+"px"),$("#confirmBox").css("margin-top","-"+$("#confirmBox").height()/2+"px")}}),$("#confirmBox").jqmShow(),!1)})),$(window).on("hashchange",(function(){ajaxPageLoad(window.location.hash.replace(/^#/,""))})),$("body").on("click","a#confirmNo",(function(){return!$("#confirmBox").is(".jqmWindow")||($("#confirmBox").jqmHide(),$("#confirmBox").remove(),!1)})))}"undefined"!=typeof jQuery&&$(document).ready((function(){ajaxEnabled&&""!=window.location.hash&&ajaxPageLoad(window.location.hash.replace(/^#/,"")),bindHandlers()})),window.name="main";
//# sourceMappingURL=data:application/json;charset=utf8;base64,
