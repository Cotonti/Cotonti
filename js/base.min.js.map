{"version":3,"sources":["base.js","webpack://cotonti/src/serverEvents/client/BaseServerEventsClient.js","webpack://cotonti/src/serverEvents/driver/BaseServerEventsDriver.js","webpack://cotonti/src/serverEvents/driver/ServerEventsSSEDriver.js","webpack://cotonti/src/serverEvents/driver/ServerEventsAjaxDriver.js","webpack://cotonti/src/serverEvents/driver/ServerEventsDriverFactory.js","webpack://cotonti/src/serverEvents/client/ServerEventsClient.js","webpack://cotonti/src/serverEvents/client/ServerEventsSharedWorkerClient.js","webpack://cotonti/src/serverEvents/ServerEvents.js","webpack://cotonti/src/Toast.js","webpack://cotonti/src/Modal.js","webpack://cotonti/src/CotontiApplication.js"],"names":["encodeURIfix","str","encodeURI","decodeURI","replace","getBaseHref","href","document","getElementsByTagName","popup","code","w","h","window","open","pfs","id","c1","c2","parser","redirect","url","location","options","selectedIndex","value","toggleblock","bl","getElementById","style","display","toggleAll","action","blks","querySelectorAll","i","length","insertText","docObj","fieldName","field","findField","forms","j","elements","name","selection","focus","createRange","text","selectionStart","startPos","endPos","selectionEnd","substring","BaseServerEventsClient","EventTarget","mode","driverType","constructor","super","this","init","onEventTriggered","eventData","console","log","event","CustomEvent","detail","dispatchEvent","BaseServerEventsDriver","eventsUrl","ServerEventsSSEDriver","e","Date","now","EventSource","onopen","onmessage","JSON","parse","data","eventId","lastEventId","onerror","ServerEventsAjaxDriver","t","n","s","setTimeout","o","response","fetch","ok","Error","status","result","json","error","message","events","forEach","ServerEventsDriverFactory","r","baseUrl","getByType","driver","serverSentEventsUrl","ajaxEventsUrl","ServerEventsClient","addEventListener","ServerEventsSharedWorkerClient","workerUrl","port","SharedWorker","postMessage","config","ServerEvents","a","l","d","c","Map","cot","cfg","serverEvents","addObserver","callback","set","onEvent","v","observer","Toast","static","title","hint","type","delay","u","bootstrap","show","container","toastTitle","toastHint","toastHTML","toastWrapper","createElement","innerHTML","toastElement","firstElementChild","appendChild","lastElementChild","remove","m","className","containerClass","body","append","Modal","content","buttons","centered","dialogClass","p","modalHTML","modalWrapper","g","querySelector","Array","isArray","button","E","buttonData","push","label","setAttribute","btnType","classList","add","closeOnClick","onClick","L","y","lang","getServerEvents","confirm","okLabel","cancelLabel","modal","getModal","getToast","toast","loadData","what","loadedData","dataToLoad","String","item","params","URLSearchParams","index","array","toString","responseData","success","key","loadCaptcha","then","captchaElements","element","captcha","executeScriptElements","form","closest","inputX","x","containerElement","scriptElements","from","scriptElement","clonedElement","attributes","attribute","parentNode","replaceChild","ajaxErrorHandlers","ajaxSuccessHandlers","ajaxEnabled","jQuery","ajaxCurrentBase","$","eq","attr","ajaxUsed","ajaxError","ajaxSend","settings","method","toUpperCase","formId","serialize","sep","indexOf","ajax","beforeSend","nonshowloading","divId","width","height","css","msg","nonshowfadein","html","hide","fadeIn","func","alert","ajaxPageLoad","hash","match","decodeURIComponent","substr","ajaxFormLoad","ajaxMakeHash","rel","formData","hrefBase","bindHandlers","click","on","prepend","jqm","onLoad","jqmShow","is","jqmHide","ready"],"mappings":";;;;;AAAA,SAAAA,aAAAC,GAGA,OAAAC,UAAAC,UAAAF,IAAAG,QAAA,YAAAA,QAAA,WACA,CAEA,SAAAC,cACA,IAAAC,EAAAC,SAAAC,qBAAA,WAAAF,KACA,aAAAA,EACA,IAEAA,CAEA,CAEA,SAAAG,MAAAC,EAAAC,EAAAC,GACAC,OAAAC,KAAAT,cAAA,eAAAK,EAAA,oFAAAC,EAAA,WAAAC,EAAA,kBACA,CAKA,SAAAG,IAAAC,EAAAC,EAAAC,EAAAC,GACAN,OAAAC,KACAT,cAAA,0BAAAW,EAAA,OAAAC,EAAA,OAAAC,EAAA,WAAAC,EACA,MACA,wHAEA,CAEA,SAAAC,SAAAC,GACAC,SAAAhB,KAAAe,EAAAE,QAAAF,EAAAG,eAAAC,KACA,CAEA,SAAAC,YAAAV,GACA,IAAAW,EAAApB,SAAAqB,eAAAZ,GAOA,MANA,QAAAW,EAAAE,MAAAC,QACAH,EAAAE,MAAAC,QAAA,GAGAH,EAAAE,MAAAC,QAAA,QAEA,CACA,CAEA,SAAAC,UAAAC,GACA,IAAAC,EAAA1B,SAAA2B,iBAAA,gBACA,IAAAC,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IACA,QAAAH,EACAC,EAAAE,GAAAN,MAAAC,QAAA,OACA,QAAAE,IACAC,EAAAE,GAAAN,MAAAC,QAAA,mBAGA,QACA,CAGA,SAAAO,WAAAC,EAAAC,EAAAd,GACA,IAAAe,EAAA,KACAF,IACAA,EAAA/B,UAGAkC,EACA,QAAAN,EAAA,EAAAA,EAAAG,EAAAI,MAAAN,OAAAD,IACA,QAAAQ,EAAA,EAAAA,EAAAL,EAAAI,MAAAP,GAAAS,SAAAR,OAAAO,IACA,GAAAL,EAAAI,MAAAP,GAAAS,SAAAD,GAAAE,MAAAN,EAAA,CACAC,EAAAF,EAAAI,MAAAP,GAAAS,SAAAD,GACA,MAAAF,CACA,CAGA,IAAAD,EACA,SAIA,GAAAF,EAAAQ,UAEAN,EAAAO,QACAT,EAAAQ,UAAAE,cACAC,KAAAxB,OACA,GAAAe,EAAAU,gBAAA,GAAAV,EAAAU,eAAA,CAEA,IAAAC,EAAAX,EAAAU,eACAE,EAAAZ,EAAAa,aACAb,EAAAf,MAAAe,EAAAf,MAAA6B,UAAA,EAAAH,GAAA1B,EAAAe,EAAAf,MAAA6B,UAAAF,EAAAZ,EAAAf,MAAAW,OACA,MACAI,EAAAf,SAEA,QACA,C,mBCvFO,MAAM8B,UAA+BC,YAIxCC,KAAO,aAKPC,WAAa,GAMb,WAAAC,CAAYD,EAAYD,EAAO,MAC3BG,QAEAC,KAAKH,WAAaA,EAEL,OAATD,IACAI,KAAKJ,KAAOA,GAGhBI,KAAKC,MACT,CAEA,gBAAAC,CAAiBC,GACK,eAAdH,KAAKJ,MACLQ,QAAQC,IAAI,6CAA8CF,GAG9D,MAAMG,EAAQ,IAAIC,YAAY,QAAS,CAACC,OAAQL,IAChDH,KAAKS,cAAcH,EACvB,EClCG,MAAMI,UAA+Bf,YACxCC,KAAO,aAKPe,UAAY,KAEZ,WAAAb,CAAYa,EAAWf,EAAO,MAC1BG,QAEa,OAATH,GAA0B,KAATA,IACjBI,KAAKJ,KAAOA,GAEhBI,KAAKW,UAAYA,CACrB,CAEA,IAAAV,GAAS,CAET,gBAAAC,CAAiBC,GACK,eAAdH,KAAKJ,MACLQ,QAAQC,IAAI,6CAA8CF,GAG9D,MAAMG,EAAQ,IAAIC,YAAY,QAAS,CAACC,OAAQL,IAChDH,KAAKS,cAAcH,EACvB,ECvBG,MAAMM,UAA8BF,EAIvCG,GAAe,KAEf,IAAAZ,GACI,GAA0B,OAAtBD,QACA,OAGc,eAAdA,KAAKJ,MACLQ,QAAQC,IAAI,+BAAgCL,KAAKW,WAGrD,MAAMnD,EAAMwC,KAAKW,UAAY,OAASG,KAAKC,MAC3Cf,QAAoB,IAAIgB,YAAYxD,GAElB,eAAdwC,KAAKJ,OACLI,QAAkBiB,OAAS,SAAUX,GACjCF,QAAQC,IAAI,2CAChB,GAGJL,QAAkBkB,UAAaZ,IAC3B,MAAMH,EAAYgB,KAAKC,MAAMd,EAAMe,eAC/BlB,EAAUkB,MAAiD,iBAAnBlB,EAAUkB,MAAyC,KAAnBlB,EAAUkB,OAClFlB,EAAUkB,KAAOF,KAAKC,MAAMjB,EAAUkB,OAE1ClB,EAAUmB,QAAUhB,EAAMiB,YAC1BvB,KAAKE,iBAAiBC,IAGR,eAAdH,KAAKJ,OACLI,QAAkBwB,QAAU,SAAUlB,GAClCF,QAAQC,IAAI,yCAChB,EAER,ECvCG,MAAMoB,UAA+Bf,EACxCgB,GAAiB,IAEjBC,GAAW,KAEXC,IAAA,EAEA,IAAA3B,GACQD,UAIJA,SAAK,EAEa,eAAdA,KAAKJ,MACLQ,QAAQC,IAAI,+BAAgCL,KAAKW,WAGrDX,QAAgB6B,gBAAiB7B,WAAmB,KACxD,CAEA,OAAA8B,GACI,IACI,MAAMtE,EAAMwC,KAAKW,UAAY,OAASG,KAAKC,MACrCgB,QAAiBC,MAAMxE,GAC7B,IAAKuE,EAASE,GACV,MAAM,IAAIC,MAAM,oBAAoBH,EAASI,UAGjD,MAAMC,QAAeL,EAASM,OAE9B,YAAID,EAAOE,OACmB,mBAAtBF,EAAOE,MAAMzF,KAKb,YAJkB,eAAdmD,KAAKJ,MACLQ,QAAQkC,MAAMF,EAAOE,MAAMC,mBAOnCH,EAAOI,QACPJ,EAAOI,OAAOC,SAASnC,IACnBA,EAAMgB,iBAAUhB,EAAMnD,GAAmBmD,EAAMnD,GAAK,KACpD6C,KAAKE,iBAAiBI,EAAM,IAIpCN,QAAgB6B,gBAAiB7B,WAAmBA,QACxD,CAAE,MAAOsC,GACLlC,QAAQC,IAAI,4CAA8CiC,EAAMC,SAChEvC,QAAgB6B,gBAAiB7B,WAAmBA,QACxD,CACJ,ECpDG,MAAM0C,EACTpE,GAAW,IAEXqE,GAAQ,aAER,WAAA7C,CAAY8C,EAAU,KAAMhD,EAAO,MACf,OAAZgD,IACA5C,QAAgB4C,GAEP,OAAThD,IACAI,QAAaJ,EAErB,CAMA,SAAAiD,CAAUhD,GACN,IAAIiD,EAAS,KAEb,MAAMC,EAAsB/C,QAAgB,yBACtCgD,EAAgBhD,QAAgB,kCAkBtC,MAfS,QADDH,GAGAiD,EAAS,IAAIlC,EAAsBmC,EAAqB/C,SACrC,eAAfA,SACAI,QAAQC,IAAI,8BAA+B0C,KAK/CD,EAAS,IAAIrB,EAAuBuB,EAAehD,SAChC,eAAfA,SACAI,QAAQC,IAAI,+BAAgC2C,IAIjDF,CACX,ECzCG,MAAMG,UAA2BvD,EACpC,IAAAO,GACsB,eAAdD,KAAKJ,MACLQ,QAAQC,IAAI,2BAGhB,MAEMyC,EAFU,IAAIJ,EAA0BlG,cAAewD,KAAKJ,MAE3CiD,UAAU7C,KAAKH,WAAYG,KAAKJ,MACvDkD,EAAOI,iBAAiB,SAAU5C,IAC9BN,KAAKE,iBAAiBI,EAAME,OAAO,IAEvCsC,EAAO7C,MACX,ECbG,MAAMkD,UAAuCzD,EAChD,IAAAO,GACI,IAAImD,EAAY,sCAEE,eAAdpD,KAAKJ,MACLQ,QAAQC,IAAI,wCAA0C+C,GAG1D,IACI,MACMC,EADS,IAAIC,aAAaF,GACZC,KAEpBA,EAAKE,YAAY,CAACC,OAAQ,CAAC5D,KAAMI,KAAKJ,KAAMkD,OAAQ9C,KAAKH,WAAY+C,QAASpG,iBAE9E6G,EAAKnC,UAAaZ,IACI,eAAdN,KAAKJ,MACLQ,QAAQC,IAAI,qCAAsCC,EAAMe,MAE5DrB,KAAKE,iBAAiBI,EAAMe,MAEpC,CAAE,MAAOR,GACLT,QAAQkC,MAAMzB,EAClB,CACJ,ECvBG,MAAM4C,EACT7D,KAAO,UAKP8D,GAAU,KAKVC,GAAc,eAKdC,GAAc,MAEdC,GAAqB,KAErB,WAAA/D,GACIE,QAA0B,IAAI8D,IAC9B9D,QAAmB+D,IAAIC,IAAIC,YAC/B,CAOA,WAAAC,CAAYlF,EAAMsB,EAAO6D,GACQ,SAAzBJ,IAAIC,IAAIC,eAIZjE,QAAwBoE,IAAIpF,EAAM,CAC9BA,KAAMA,EACNsB,MAAOA,EACP+D,QAASF,IAGQ,OAAjBnE,SACAA,UAER,CAEA,EAAAjD,GACiC,SAAzBgH,IAAIC,IAAIC,eAIa,iBAArBjE,cAAK,WAA0CsD,cAC7B,eAAdtD,KAAKJ,MACLQ,QAAQC,IAAI,2CAEhBL,QAAe,IAAImD,EAA+BnD,QAAkBA,KAAKJ,QAEvD,eAAdI,KAAKJ,MACLQ,QAAQC,IAAI,+BAEhBL,QAAe,IAAIiD,EAAmBjD,QAAkBA,KAAKJ,OAGjEI,QAAakD,iBAAiB,SAAU5C,IACpCN,QAAuBM,EAAME,OAAO,IAE5C,CAEA,EAAA8D,CAAkBnE,GACI,eAAdH,KAAKJ,MACLQ,QAAQC,IAAI,yBAA0BF,GAG1CH,QAAwByC,SAAS8B,IAEzBA,EAASjE,QAAUH,EAAUG,OACE,mBAArBiE,EAASF,SAEnBE,EAASF,QAAQlE,EACrB,GAER,ECjFG,MAAMqE,EACTC,sBAAwB,oDAExBC,MAAQ,GACRnC,QAAU,GACVoC,KAAO,GACPC,KAAO,GACPC,MAAQ,IAERC,GAAa,KAQb,WAAAhF,CAAYyC,EAASmC,EAAQ,GAAIC,EAAO,GAAIC,EAAO,aAC3C5H,OAAO+H,WAKX/E,KAAK0E,MAAQA,EACb1E,KAAKuC,QAAUA,EACfvC,KAAK2E,KAAOA,EACZ3E,KAAK4E,KAAOA,GAPRxE,QAAQkC,MAAM,mEAQtB,CAEA,IAAA0C,GACI,GAAwB,OAApBhF,QAA0B,CAC1B,IAAIiF,EAAYvI,SAASqB,eAAe,mBACtB,OAAdkH,IACAA,EAAYjF,WAEhBA,QAAkBiF,CACtB,CAEA,MAAMC,EAAa,2BAA2BlF,KAAK0E,iBAC7CS,EAA0B,KAAdnF,KAAK2E,KAAc,UAAU3E,KAAK2E,eAAiB,GAG/DS,EAAY,oBAFe,KAAdpF,KAAK4E,KAAc,YAAY5E,KAAK4E,OAAS,4EAGpC5E,KAAK6E,oCAEtBK,IAAaC,8HAGSnF,KAAKuC,sBAGhC8C,EAAe3I,SAAS4I,cAAc,OAC5CD,EAAaE,UAAYH,EAEzB,MAAMI,EAAeH,EAAaI,kBAGlCzF,QAAgB0F,YAAYF,GAGd,IAAIxI,OAAO+H,UAAUP,MAAMgB,GACnCR,OAGNhF,QAAgB2F,iBAAiBzC,iBAAiB,wBAC9CsC,EAAaI,SACqB,KAA9B5F,QAAgBuF,YAChBvF,QAAgB4F,SAChB5F,QAAkB,KACtB,GAER,CAEA,EAAA6F,GACI,MAAMzD,EAAS1F,SAAS4I,cAAc,OAItC,OAHAlD,EAAOjF,GAAK,kBACZiF,EAAO0D,UAAYtB,EAAMuB,eACzBrJ,SAASsJ,KAAKC,OAAO7D,GACdA,CACX,EC/EG,MAAM8D,EACTxB,MAAQ,GACRyB,QAAU,GAKVC,QAAU,KAMVC,YAEAC,YAAc,eAKdC,GAAW,KAaX,WAAAzG,CAAYqG,EAASzB,EAAQ,GAAI0B,EAAU,eACnCpJ,OAAO+H,WAKX/E,KAAK0E,MAAQA,EACb1E,KAAKmG,QAAUA,EACfnG,KAAKoG,QAAUA,GANXhG,QAAQkC,MAAM,mEAOtB,CAEA,IAAA0C,GACI,IAAIsB,EAActG,KAAKsG,YACnBtG,KAAKqG,WACLC,GAAe,0BAGnB,MAAME,EAEF,4IAAeF,iHAGgDtG,KAAK0E,uIAGrC1E,KAAKmG,kEAMlCM,EAAe/J,SAAS4I,cAAc,OAC5CmB,EAAalB,UAAYiB,EACzBxG,QAAgByG,EAAahB,kBAE7BzF,UAGAtD,SAASsJ,KAAKN,YAAY1F,SAGZ,IAAI+E,UAAUmB,MAAMlG,SAC5BgF,OAGNhF,QAAckD,iBAAiB,wBAC3BlD,QAAc4F,QAAQ,GAE9B,CAEA,EAAAc,GACI,MAAMN,EAAUpG,UAEhB,GAAgB,KAAZoG,GAAkBA,IAAY,GAC9B,OAGJ,MAAMnB,EAAYjF,QAAc2G,cAAc,iBAEvB,iBAAZP,EAKPQ,MAAMC,QAAQT,IACdA,EAAQ3D,SAASqE,IACS,iBAAXA,EAIX7B,EAAUS,YAAYoB,GAHlB7B,EAAUM,WAAauB,CAGE,IAVjC7B,EAAUM,UAAYa,CAa9B,CAEA,EAAAW,GACI,MAAM3E,EAAS,GACf,IAAIgE,EAAUpG,KAAKoG,QACnB,OAAIA,IAAY,GACLhE,EAGK,OAAZgE,EACO,yFAGY,iBAAZA,EACAA,GAGPQ,MAAMC,QAAQT,IACdA,EAAQ3D,SAASuE,IACb,GAA0B,iBAAfA,EAEP,YADA5E,EAAO6E,KAAKD,GAIhB,MAAMF,EAASpK,SAAS4I,cAAc,mBAClC0B,EAAWE,QACXJ,EAAOvB,UAAYyB,EAAWE,OAGlCJ,EAAOK,aAAa,gBAAQH,EAAWI,QAAwBJ,EAAWI,QAAU,UACpFN,EAAOO,UAAUC,IAAI,gBAEjBN,EAAWpC,MACXkC,EAAOO,UAAUC,IAAI,OAASN,EAAWpC,eAGzCoC,EAAWO,mBAA8BP,EAAWO,cACpDT,EAAOK,aAAa,kBAAmB,kBAGvCH,EAAWQ,SAAuD,mBAAvBR,EAAWQ,SACtDV,EAAO5D,iBAAiB,SAAU5C,GAAkB0G,EAAWQ,QAAQlH,KAG3E8B,EAAO6E,KAAKH,EAAO,IAGpB1E,EACX,ECqEJpF,OAAO+G,IAAM,IAhOb,MAEIC,IAAM,CAAC,EACPyD,EAAI,CAAC,EAELC,GAAe,KAEf,IAAAzH,CAAKoB,YACGA,EAAKmC,SACLxD,KAAKgE,IAAM3C,EAAKmC,iBAGhBnC,EAAKsG,OACL3H,KAAKyH,EAAIpG,EAAKsG,KAEtB,CAMA,eAAAC,GAII,OAH0B,OAAtB5H,UACAA,QAAoB,IAAIyD,GAErBzD,OACX,CAWA,OAAA6H,CAAQnD,EAAOyB,EAAShC,EAAU2D,EAAU,KAAMC,EAAc,UAC5D/H,KAAKgI,MAAMtD,EAAOyB,EAAS,CACvB,CAACe,MAAOY,EAASN,QAAUlH,GAAkB6D,EAAS7D,GAASsE,KAAM,UAAW2C,iBAChF,CAACL,MAAOa,EAAaR,gBAAoB3C,KAAM,cAEvD,CAeA,QAAAqD,CAAS9B,EAASzB,EAAQ,GAAI0B,EAAS,MACnC,OAAO,IAAIF,EAAMC,EAASzB,EAAO0B,EACrC,CAeA,KAAA4B,CAAM7B,EAASzB,EAAQ,GAAI0B,EAAS,MAChC,MAAM4B,EAAQhI,KAAKiI,SAAS9B,EAASzB,EAAO0B,GAE5C,OADA4B,EAAMhD,OACCgD,CACX,CAUA,QAAAE,CAAS3F,EAASmC,EAAQ,GAAIC,EAAO,GAAIC,EAAO,IAC5C,OAAO,IAAIJ,EAAMjC,EAASmC,EAAOC,EAAMC,EAC3C,CAUA,KAAAuD,CAAM5F,EAASmC,EAAQ,GAAIC,EAAO,GAAIC,EAAO,GAAIC,EAAQ,KACrD,MAAMsD,EAAQnI,KAAKkI,SAAS3F,EAASmC,EAAOC,EAAMC,GAOlD,OALc,OAAVC,IACAsD,EAAMtD,MAAQA,GAGlBsD,EAAMnD,OACCmD,CACX,CAeA,cAAAC,CAAeC,GACX,IAAKA,EACD,MAAO,CAAC,WAGRrI,KAAKsI,aACLtI,KAAKsI,WAAa,CAAC,GAGvB,IAAIC,EAAa,IAEG,iBAATF,GAAqBA,aAAgBG,UAC5CH,EAAO,CAACA,IAGZ,IAAK,IAAII,KAAQJ,EACPI,KAAQzI,KAAKsI,YACfC,EAAWtB,KAAKwB,GAIxB,GAAIF,EAAWhK,OAAS,EAAG,CAEvB,IAAImK,EAAS,IAAIC,gBAAgB,CAAChH,EAAG,OAAQ+B,EAAG,QAEhD6E,EAAW9F,UAASgG,EAAMG,EAAOC,KAC7BH,EAAOzC,OAAO,QAAU2C,EAAQ,IAAKH,EAAK,IAE9CC,EAAOzC,OAAO,QAAS,GACvB,IACI,IAAIlE,QAAiBC,MAAM,aAAe0G,EAAOI,YAEjD,GAAI/G,EAASE,GAAI,CACb,MAAM8G,QAAqBhH,EAASM,OACpC,GAAI0G,EAAaC,QACb,IAAK,MAAMC,KAAOF,EAAa1H,KAC3BrB,KAAKsI,WAAWW,GAAOF,EAAa1H,KAAK4H,EAIrD,CAGJ,CAAE,MAAO3G,GAET,CACJ,CAEA,IAAIF,EAAS,CAAC,EACd,IAAK,IAAIqG,KAAQJ,EACRI,KAAQzI,KAAKsI,aACdlG,EAAOqG,GAAQzI,KAAKsI,WAAWG,IAIvC,OAAOrG,CACX,CAKA,WAAA8G,GACIlJ,KAAKoI,SAAS,CAAC,UAAW,MAAMe,MAAK/G,IACjC,IAAIgH,EAAkB1M,SAAS2B,iBAAiB,yBAChD,IAAK,IAAIgL,KAAWD,EAAiB,CACjCC,EAAQ9D,UAAYnD,EAAOkH,QAC3BtJ,KAAKuJ,sBAAsBF,GAC3BA,EAAQhC,UAAUzB,OAAO,uBAAwB,WACjDyD,EAAQhC,UAAUC,IAAI,WAEtB,MAAMkC,EAAOH,EAAQI,QAAQ,QAC7B,GAAa,OAATD,EAAe,CACf,IAAIE,EAASF,EAAK7C,cAAc,kCACjB,OAAX+C,GACAA,EAAOvC,aAAa,QAAS/E,EAAOuH,EAE5C,CACJ,IAER,CAOA,qBAAAJ,CAAsBK,GAClB,MAAMC,EAAiBD,EAAiBvL,iBAAiB,UAEzDuI,MAAMkD,KAAKD,GAAgBpH,SAASsH,IAChC,MAAMC,EAAgBtN,SAAS4I,cAAc,UAC7CsB,MAAMkD,KAAKC,EAAcE,YAAYxH,SAASyH,IAC1CF,EAAc7C,aAAa+C,EAAUlL,KAAMkL,EAAUtM,MAAM,IAE/DoM,EAAc5K,KAAO2K,EAAc3K,KACnC2K,EAAcI,WAAWC,aAAaJ,EAAeD,EAAc,GAE3E,E,KXlIJ,IAAAM,kBAAA,IAAAzD,MACA0D,oBAAA,IAAA1D,MAEA2D,aAAA,EAEA,uBAAAC,OACA,IAAAC,gBAAAhN,SAAAhB,KAAAF,QAAAmO,EAAA,QAAAC,GAAA,GAAAC,KAAA,YAAArO,QAAA,YAAAA,QAAA,WAIA,IAAAsO,UAAA,EAEAC,WAAA,EASA,SAAAC,SAAAC,GACA,IAAAC,EAAAD,EAAAC,OAAAD,EAAAC,OAAAC,cAAA,MACA7J,EAAA2J,EAAA3J,MAAA,GACA7D,EAAAwN,EAAAxN,KAAAkN,EAAA,IAAAM,EAAAG,QAAAP,KAAA,UACA,YAAAK,EACA5J,GAAA,IAAAqJ,EAAA,IAAAM,EAAAG,QAAAC,iBACA,GAAAJ,EAAAG,OAAA,CACA,IAAAE,EAAA7N,EAAA8N,QAAA,eACA9N,GAAA6N,EAAAX,EAAA,IAAAM,EAAAG,QAAAC,WACA,CAkDA,OAjDAV,EAAAa,KAAA,CACA3G,KAAAqG,EACAzN,IAAArB,aAAAqB,GACA6D,OACAmK,WAAA,WACAR,EAAAS,gBACAf,EAAA,IAAAM,EAAAU,OACAzF,OAAA,yCAAAyE,EAAA,IAAAM,EAAAU,OAAAC,QAAA,kBAAAjB,EAAA,IAAAM,EAAAU,OAAAE,SAAA,iGAAAC,IAAA,sBAEA,EACA7C,QAAA,SAAA8C,GACAd,EAAAS,gBACAf,EAAA,YAAA9E,SAEAoF,EAAAe,cAGArB,EAAA,IAAAM,EAAAU,OAAAM,KAAAF,GAFApB,EAAA,IAAAM,EAAAU,OAAAO,OAAAD,KAAAF,GAAAI,OAAA,KAIA,QAAA5N,EAAA,EAAAA,EAAAgM,oBAAA/L,OAAAD,IACAgM,oBAAAhM,GAAA6N,KACA7B,oBAAAhM,GAAA6N,KAAAL,GAEAxB,oBAAAhM,GAAAwN,EAEA,EACAxJ,MAAA,SAAAwJ,GASA,GARAd,EAAAS,gBACAf,EAAA,YAAA9E,SAEAoF,EAAAe,cAGArB,EAAA,IAAAM,EAAAU,OAAAM,KAAAF,GAFApB,EAAA,IAAAM,EAAAU,OAAAO,OAAAD,KAAAF,GAAAI,OAAA,KAIA7B,kBAAA9L,OAAA,EACA,QAAAD,EAAA,EAAAA,EAAA+L,kBAAA9L,OAAAD,IACA+L,kBAAA/L,GAAA6N,KACA9B,kBAAA/L,GAAA6N,KAAAL,GAEAzB,kBAAA/L,GAAAwN,QAIAM,MAAA,eAAAN,GACAhB,WAAA,CAEA,KAEA,CACA,CASA,SAAAuB,aAAAC,GACA,KAAAA,GACAA,EAAA/P,QAAA,SAEA,IAAAsJ,EAAAyG,EAAAC,MAAA,qBACA,GAAA1G,EAAA,CAEA,IAAArI,EAAAqI,EAAA,GAAAyF,QAAA,OAAAzF,EAAA,GAAAtJ,QAAA,SAAAkO,gBAAA,IAAA+B,mBAAA3G,EAAA,IAEA,OADAgF,UAAA,EACAE,SAAA,CACAE,OAAA,MACAzN,MACAkO,MAAA7F,EAAA,GAAAA,EAAA,GAAA4G,OAAA,gBAEA,YAAAH,IAAAzB,UAEAE,SAAA,CACAvN,IAAAC,SAAAhB,KAAAF,QAAA,WACAmP,MAAA,aAIA,CAUA,SAAAgB,aAAAJ,EAAAnB,GACA,IAAAtF,EAAAyG,EAAAC,MAAA,4BACA,GAAA1G,EAAA,CAEA,IAAArI,EAAAqI,EAAA,GAAAyF,QAAA,OAAAzF,EAAA,GAAAtJ,QAAA,SAAAkO,gBAAA,IAAA5E,EAAA,GAEA,OADAgF,UAAA,EACAE,SAAA,CACAE,OAAApF,EAAA,GAAAqF,cACA1N,MACAkO,MAAA7F,EAAA,GAAAA,EAAA,GAAA4G,OAAA,eACAtB,UAEA,CACA,QACA,CAWA,SAAAwB,aAAAlQ,EAAAmQ,EAAAC,GACA,IACAC,EAAApE,EADA4D,EAAA,QAAAO,EAAA,aAEAxB,EAAA,IACAxF,IAAA+G,KAAAL,MAAA,+BA0BA,OAzBA1G,IACAyG,EAAAzG,EAAA,GACAA,EAAA,KACAyG,GAAAzG,EAAA,IAEAA,EAAA,KACApJ,EAAAoJ,EAAA,GAAA4G,OAAA,GACApB,EAAA,MAGAiB,GAAA,IACA7P,EAAA6O,QAAAD,GAAA,GACAyB,EAAArQ,EAAAgQ,OAAA,EAAAhQ,EAAA6O,QAAAD,IACA3C,EAAAjM,EAAAgQ,OAAAhQ,EAAA6O,QAAAD,GAAA,GACAwB,GAAA,QAAAA,IACAnE,GAAA,IAAAmE,KAGAC,EAAArQ,EACAiM,EAAA,GACAmE,GAAA,QAAAA,IACAnE,GAAA2C,EAAAwB,IAGAP,GAAAQ,GAAArC,gBAAA/B,EAAAoE,EAAA,IAAApE,CAEA,CAKA,SAAAqE,gBACA,aAAAtP,SAAA6O,MAAA7O,SAAA6O,KAAAC,MAAA,WACA7B,EAAA,aAAAmB,IAAA,cAEAnB,EAAA,kBAAAsC,OAAA,WACA,QAAAtC,EAAA,aAAAmB,IAAA,WACAnB,EAAA,aAAAmB,IAAA,cAEAnB,EAAA,aAAAmB,IAAA,iBAEA,IAEApO,SAAAhB,KAAA8P,MAAA,cACA7B,EAAA,aAAAmB,IAAA,cAGAtB,cAEAG,EAAA,QAAAuC,GAAA,iCAMA,MALA,QAAAvC,EAAA1K,MAAA4K,KAAA,UAAAM,cACAwB,aAAAC,aAAAjC,EAAA1K,MAAA4K,KAAA,UAAArO,QAAA,WAAAmO,EAAA1K,MAAA4K,KAAA,iBAAAF,EAAA1K,MAAA4K,KAAA,OAEA5N,OAAAS,SAAA6O,KAAAK,aAAAjC,EAAA1K,MAAA4K,KAAA,UAAArO,QAAA,WAAAmO,EAAA1K,MAAA4K,KAAA,SAAAF,EAAA1K,MAAAoL,aAEAN,SACA,IACAJ,EAAA,QAAAuC,GAAA,6BAEA,OADAjQ,OAAAS,SAAA6O,KAAAK,aAAAjC,EAAA1K,MAAA4K,KAAA,QAAArO,QAAA,WAAAmO,EAAA1K,MAAA4K,KAAA,QACAE,SACA,IAGAJ,EAAA,QAAAuC,GAAA,oCACA,OAAAvC,EAAA1K,MAAA4K,KAAA,QAAA2B,MAAA,mBACA7B,EAAA,gBACAA,EAAA,eAAA9E,SAEA8E,EAAA,QAAAwC,QAAA,iDACAxC,EAAA,eAAAyC,IAAA,CAAA5B,KAAAb,EAAA1K,MAAA4K,KAAA,QAAA5C,OAAA,EAAAoF,OAAA,WACA1C,EAAA,eAAAmB,IAAA,kBAAAnB,EAAA,eAAAiB,QAAA,QACAjB,EAAA,eAAAmB,IAAA,iBAAAnB,EAAA,eAAAkB,SAAA,OACA,IACAlB,EAAA,eAAA2C,WACA,EAIA,IAGA3C,EAAA1N,QAAAiQ,GAAA,yBACAZ,aAAArP,OAAAS,SAAA6O,KAAA/P,QAAA,SACA,IAEAmO,EAAA,QAAAuC,GAAA,kCACA,OAAAvC,EAAA,eAAA4C,GAAA,gBAEA5C,EAAA,eAAA6C,UACA7C,EAAA,eAAA9E,UACA,EAMA,IAEA,CAEA,oBAAA4E,QACAE,EAAAhO,UAAA8Q,OAAA,WAEAjD,aACA,IAAAvN,OAAAS,SAAA6O,MACAD,aAAArP,OAAAS,SAAA6O,KAAA/P,QAAA,UAIAwQ,cACA,IAGA/P,OAAAgC,KAAA","file":"base.min.js","sourcesContent":["function encodeURIfix(str) {\r\n\t// to prevent twice encoding\r\n\t// and fix '[',']' signs to follow RFC3986 (section-3.2.2)\r\n\treturn encodeURI(decodeURI(str)).replace(/%5B/g, '[').replace(/%5D/g, ']');\r\n}\r\n\r\nfunction getBaseHref() {\r\n\tvar href = document.getElementsByTagName('base')[0].href;\r\n\tif (href == null) {\r\n\t\treturn '/';\r\n\t} else {\r\n\t\treturn href;\r\n\t}\r\n}\r\n\r\nfunction popup(code, w, h){\r\n    window.open(getBaseHref() + 'index.php?o=' + code, '', 'toolbar=0,location=0,directories=0,menuBar=0,resizable=0,scrollbars=yes,width=' + w + ',height=' + h + ',left=32,top=16');\r\n}\r\n\r\n/**\r\n * @todo move to pfs module\r\n */\r\nfunction pfs(id, c1, c2, parser){\r\n    window.open(\r\n\t\tgetBaseHref() + 'index.php?e=pfs&userid=' + id + '&c1=' + c1 + '&c2=' + c2 + '&parser=' + parser,\r\n\t\t'PFS',\r\n\t\t'status=1, toolbar=0,location=0,directories=0,menuBar=0,resizable=1,scrollbars=yes,width=754,height=512,left=32,top=16'\r\n\t);\r\n}\r\n\r\nfunction redirect(url){\r\n    location.href = url.options[url.selectedIndex].value;\r\n}\r\n\r\nfunction toggleblock(id){\r\n    var bl = document.getElementById(id);\r\n    if (bl.style.display == 'none') {\r\n        bl.style.display = '';\r\n    }\r\n    else {\r\n        bl.style.display = 'none';\r\n    }\r\n\treturn false;\r\n}\r\n\r\nfunction toggleAll(action) {\r\n\tvar blks = document.querySelectorAll('[id^=\"blk_\"]');\r\n\tfor (i = 0; i < blks.length; i++) {\r\n\t\tif (action == 'hide') {\r\n\t\t\tblks[i].style.display = 'none';\r\n\t\t} else if (action == 'show') {\r\n\t\t\tblks[i].style.display = 'table-row-group';\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n// Inserts text into textarea at cursor position\r\nfunction insertText(docObj, fieldName, value) {\r\n\tvar field = null;\r\n\tif (!docObj) {\r\n\t\tdocObj = document;\r\n\t}\r\n\t// Find the field in the docObj\r\n\tfindField:\r\n\tfor (var i = 0; i < docObj.forms.length; i++) {\r\n\t\tfor (var j = 0; j < docObj.forms[i].elements.length; j++) {\r\n\t\t\tif (docObj.forms[i].elements[j].name == fieldName) {\r\n\t\t\t\tfield = docObj.forms[i].elements[j];\r\n\t\t\t\tbreak findField;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (!field) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Insert the text\r\n\tif (docObj.selection) {\r\n\t\t// MSIE and Opera\r\n\t\tfield.focus();\r\n\t\tvar sel = docObj.selection.createRange();\r\n\t\tsel.text = value;\r\n\t} else if (field.selectionStart || field.selectionStart == 0) {\r\n\t\t// Mozilla\r\n\t\tvar startPos = field.selectionStart;\r\n\t\tvar endPos = field.selectionEnd;\r\n\t\tfield.value = field.value.substring(0, startPos) + value + field.value.substring(endPos, field.value.length);\r\n\t} else {\r\n\t\tfield.value += value;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n// Array of ajax error handlers\r\n// Example of use:\r\n// ajaxErrorHandlers.push({func: myErrorHandler});\r\n// ajaxSuccessHandlers.push({func: mySuccessHandler});\r\nvar ajaxErrorHandlers = new Array();\r\nvar ajaxSuccessHandlers = new Array();\r\n// AJAX enablement defaults to false\r\nvar ajaxEnabled = false;\r\n// Required to calculate paths\r\nif (typeof jQuery != 'undefined') {\r\n\tvar ajaxCurrentBase = location.href.replace($('base').eq(0).attr('href'), '').replace(/\\?.*$/, '').replace(/#.*$/, '');\r\n}\r\n// This flag indicates that AJAX+history has been used on this page\r\n// It means that \"#\" or home link should be loaded via ajax too\r\nvar ajaxUsed = false;\r\n// Global flag to let everybody know that AJAX has failed\r\nvar ajaxError = false;\r\n\r\n/**\r\n * AJAX helper function\r\n * @param {hash} settings A hashtable with settings\r\n * @return FALSE on successful AJAX call, TRUE on error to continue in\r\n * synchronous mode\r\n * @type bool\r\n */\r\nfunction ajaxSend(settings) {\r\n\tvar method = settings.method ? settings.method.toUpperCase() : 'GET';\r\n\tvar data = settings.data || '';\r\n\tvar url = settings.url || $('#' + settings.formId).attr('action');\r\n\tif (method === 'POST') {\r\n\t\tdata += '&' + $('#' + settings.formId).serialize();\r\n\t} else if (settings.formId) {\r\n\t\tvar sep = url.indexOf('?') > 0 ? '&' : '?';\r\n\t\turl += sep + $('#' + settings.formId).serialize();\r\n\t}\r\n\t$.ajax({\r\n\t\ttype: method,\r\n\t\turl: encodeURIfix(url),\r\n\t\tdata: data,\r\n\t\tbeforeSend: function() {\r\n\t\t\tif (!settings.nonshowloading) {\r\n\t\t\t\t$('#' + settings.divId)\r\n\t\t\t\t\t.append('<span style=\"position:absolute; left:' + ($('#' + settings.divId).width()/2 - 110) + 'px;top:' + ($('#' + settings.divId).height()/2 - 9) + 'px;\" class=\"loading\" id=\"loading\"><img src=\"./images/spinner.gif\" alt=\"loading\"/></span>').css('position', 'relative');\r\n\t\t\t}\r\n\t\t},\r\n\t\tsuccess: function(msg) {\r\n\t\t\tif (!settings.nonshowloading) {\r\n\t\t\t\t$('#loading').remove();\r\n\t\t\t}\r\n\t\t\tif (!settings.nonshowfadein) {\r\n\t\t\t\t$('#' + settings.divId).hide().html(msg).fadeIn(500);\r\n\t\t\t} else {\r\n\t\t\t\t$('#' + settings.divId).html(msg);\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < ajaxSuccessHandlers.length; i++) {\r\n\t\t\t\tif(ajaxSuccessHandlers[i].func)\r\n\t\t\t\t\tajaxSuccessHandlers[i].func(msg);\r\n\t\t\t\telse\r\n\t\t\t\t\tajaxSuccessHandlers[i](msg);\r\n\t\t\t}\r\n\t\t},\r\n\t\terror: function(msg) {\r\n\t\t\tif (!settings.nonshowloading) {\r\n\t\t\t\t$('#loading').remove();\r\n\t\t\t}\r\n\t\t\tif (!settings.nonshowfadein) {\r\n\t\t\t\t$('#' + settings.divId).hide().html(msg).fadeIn(500);\r\n\t\t\t} else {\r\n\t\t\t\t$('#' + settings.divId).html(msg);\r\n\t\t\t}\r\n\t\t\tif (ajaxErrorHandlers.length > 0) {\r\n\t\t\t\tfor (var i = 0; i < ajaxErrorHandlers.length; i++) {\r\n\t\t\t\t\tif (ajaxErrorHandlers[i].func) {\r\n\t\t\t\t\t\tajaxErrorHandlers[i].func(msg);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tajaxErrorHandlers[i](msg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\talert('AJAX error: ' + msg);\r\n\t\t\t\tajaxError = true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * AJAX subpage loader with history support\r\n * @param {string} hash A hash-address string\r\n * @return FALSE on successful AJAX call, TRUE on error to continue in\r\n * synchronous mode\r\n * @type bool\r\n */\r\nfunction ajaxPageLoad(hash) {\r\n    if (hash !== '') {\r\n\t\thash.replace(/^#/, '');\r\n\t}\r\n\tvar m = hash.match(/^get(-.*?)?;(.*)$/);\r\n\tif (m) {\r\n\t\t// ajax bookmark\r\n        var url = m[2].indexOf(';') > 0 ? m[2].replace(';', '?') : ajaxCurrentBase + '?' + decodeURIComponent(m[2]);\r\n\t\tajaxUsed = true;\r\n\t\treturn ajaxSend({\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: url,\r\n\t\t\tdivId: m[1] ? m[1].substr(1) : 'ajaxBlock'\r\n\t\t});\r\n\t} else if (hash === '' && ajaxUsed) {\r\n\t\t// ajax home\r\n\t\treturn ajaxSend ({\r\n\t\t\turl: location.href.replace(/#.*$/, ''),\r\n\t\t\tdivId: 'ajaxBlock'\r\n\t\t});\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * AJAX subform loader without history tracking\r\n * @param {string} hash A hash-address string\r\n * @param {string} formId Target form id attribute\r\n * @return FALSE on successful AJAX call, TRUE on error to continue in\r\n * synchronous mode\r\n * @type bool\r\n */\r\nfunction ajaxFormLoad(hash, formId) {\r\n\tvar m = hash.match(/^(get|post)(-.*?)?;(.*)$/);\r\n\tif (m) {\r\n\t\t// ajax bookmark\r\n\t\tvar url = m[3].indexOf(';') > 0 ? m[3].replace(';', '?') : ajaxCurrentBase + '?' + m[3];\r\n\t\tajaxUsed = true;\r\n\t\treturn ajaxSend({\r\n\t\t\tmethod: m[1].toUpperCase(),\r\n\t\t\turl: url,\r\n\t\t\tdivId: m[2] ? m[2].substr(1) : 'ajaxBlock',\r\n\t\t\tformId: formId\r\n\t\t});\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Constructs ajaxable hash string\r\n * @param {string} href Link href or form action attribute\r\n * @param {string} rel An attribute value possibly containing a hash address\r\n * @param {string} formData Is passed for forms only, is 'post' for POST forms\r\n * or serialized form data for GET forms\r\n * @return A valid hash-address string\r\n * @type string\r\n */\r\nfunction ajaxMakeHash(href, rel, formData) {\r\n\tvar hash = (formData == 'post') ? 'post' : 'get';\r\n\tvar hrefBase, params;\r\n\tvar sep = '?';\r\n\tvar m = rel ? rel.match(/(get|post)(-[^ ;]+)?(;\\S*)?/) : false;\r\n\tif (m) {\r\n\t\thash = m[1];\r\n\t\tif (m[2]) {\r\n\t\t\thash += m[2];\r\n\t\t}\r\n\t\tif (m[3]) {\r\n\t\t\thref = m[3].substr(1);\r\n\t\t\tsep  = ';';\r\n\t\t}\r\n\t}\r\n\thash += ';'\r\n\tif (href.indexOf(sep) > 0) {\r\n\t\threfBase = href.substr(0, href.indexOf(sep));\r\n\t\tparams = href.substr(href.indexOf(sep) + 1);\r\n\t\tif (formData && formData != 'post') {\r\n\t\t\tparams += '&' + formData;\r\n\t\t}\r\n\t} else {\r\n\t\threfBase = href;\r\n\t\tparams = '';\r\n\t\tif (formData && formData != 'post') {\r\n\t\t\tparams += sep + formData;\r\n\t\t}\r\n\t}\r\n\thash += hrefBase == ajaxCurrentBase ? params : hrefBase + ';' + params;\r\n\treturn hash;\r\n}\r\n\r\n/**\r\n * Standard event bindings\r\n */\r\nfunction bindHandlers() {\r\n\tif (location.hash == '#comments' || location.hash.match(/#c\\d+/)) {\r\n\t\t$('.comments').css('display', '');\r\n\t}\r\n\t$('.comments_link').click(function() {\r\n\t\tif($('.comments').css('display') == 'none') {\r\n\t\t\t$('.comments').css('display', '');\r\n\t\t} else {\r\n\t\t\t$('.comments').css('display', 'none');\r\n\t\t}\r\n\t});\r\n\r\n\tif(location.href.match(/#comments/)) {\r\n\t\t$('.comments').css('display', '');\r\n\t}\r\n\r\n\tif (ajaxEnabled) {\r\n\t\t// AJAX auto-handling\r\n\t\t$('body').on('submit', 'form.ajax', function() {\r\n\t\t\tif ($(this).attr('method').toUpperCase() == 'POST') {\r\n\t\t\t\tajaxFormLoad(ajaxMakeHash($(this).attr('action').replace(/#.*$/, ''), $(this).attr('class'), 'post'), $(this).attr('id'));\r\n\t\t\t} else {\r\n\t\t\t\twindow.location.hash = ajaxMakeHash($(this).attr('action').replace(/#.*$/, ''), $(this).attr('class'), $(this).serialize());\r\n\t\t\t}\r\n\t\t\treturn ajaxError;\r\n\t\t});\r\n\t\t$('body').on('click', 'a.ajax', function() {\r\n\t\t\twindow.location.hash = ajaxMakeHash($(this).attr('href').replace(/#.*$/, ''), $(this).attr('rel'));\r\n\t\t\treturn ajaxError;\r\n\t\t});\r\n\r\n\t\t// AJAX action confirmations\r\n\t\t$('body').on('click', 'a.confirmLink', function() {\r\n\t\t\tif ($(this).attr('href').match(/message.+920/i)) {\r\n\t\t\t\tif ($('#confirmBox')) {\r\n\t\t\t\t\t$('#confirmBox').remove();\r\n\t\t\t\t}\r\n\t\t\t\t$('body').prepend('<div id=\"confirmBox\" class=\"jqmWindow\"></div>');\r\n\t\t\t\t$('#confirmBox').jqm({ajax:$(this).attr('href'),modal:true,onLoad:function(){\r\n\t\t\t\t\t$('#confirmBox').css('margin-left', '-'+($('#confirmBox').width()/2)+'px');\r\n\t\t\t\t\t$('#confirmBox').css('margin-top', '-'+($('#confirmBox').height()/2)+'px');\r\n\t\t\t\t}});\r\n\t\t\t\t$('#confirmBox').jqmShow();\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Listen to hash change events\r\n\t\t$(window).on('hashchange', function() {\r\n\t\t\tajaxPageLoad(window.location.hash.replace(/^#/, ''));\r\n\t\t});\r\n\r\n\t\t$('body').on('click', 'a#confirmNo', function() {\r\n\t\t\tif ($(\"#confirmBox\").is(\".jqmWindow\"))\r\n\t\t\t{\r\n\t\t\t\t$('#confirmBox').jqmHide();\r\n\t\t\t\t$('#confirmBox').remove();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nif (typeof jQuery != 'undefined') {\r\n    $(document).ready(function() {\r\n        // If page was loaded with hash\r\n        if (ajaxEnabled) {\r\n            if(window.location.hash != '') {\r\n                ajaxPageLoad(window.location.hash.replace(/^#/, ''));\r\n            }\r\n        }\r\n\r\n        bindHandlers();\r\n    });\r\n}\r\n\r\nwindow.name = 'main';","/**\r\n * Base server events client\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class BaseServerEventsClient extends EventTarget {\r\n    /**\r\n     * @type {string|null}\r\n     */\r\n    mode = 'production';\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    driverType = '';\r\n\r\n    /**\r\n     * @param {string} driverType\r\n     * @param {string|null} mode\r\n     */\r\n    constructor(driverType, mode = null) {\r\n        super();\r\n\r\n        this.driverType = driverType;\r\n\r\n        if (mode !== null) {\r\n            this.mode = mode;\r\n        }\r\n\r\n        this.init();\r\n    }\r\n\r\n    onEventTriggered(eventData) {\r\n        if (this.mode !== 'production') {\r\n            console.log('ServerEventsClient: Server triggered event', eventData);\r\n        }\r\n\r\n        const event = new CustomEvent('event', {detail: eventData});\r\n        this.dispatchEvent(event);\r\n    }\r\n}","/**\r\n * Base server events driver\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class BaseServerEventsDriver extends EventTarget {\r\n    mode = 'production';\r\n\r\n    /**\r\n     * @type {string|null}\r\n     */\r\n    eventsUrl = null;\r\n\r\n    constructor(eventsUrl, mode = null) {\r\n        super();\r\n\r\n        if (mode !== null && mode !== '') {\r\n            this.mode = mode;\r\n        }\r\n        this.eventsUrl = eventsUrl;\r\n    }\r\n\r\n    init() { }\r\n\r\n    onEventTriggered(eventData) {\r\n        if (this.mode !== 'production') {\r\n            console.log('ServerEventsDriver: Server triggered event', eventData);\r\n        }\r\n\r\n        const event = new CustomEvent('event', {detail: eventData});\r\n        this.dispatchEvent(event);\r\n    }\r\n}","import {BaseServerEventsDriver} from \"./BaseServerEventsDriver\";\r\n\r\n/**\r\n * Server - Sent events driver\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events\r\n */\r\nexport class ServerEventsSSEDriver extends BaseServerEventsDriver {\r\n    /**\r\n     * @type {EventSource|null}\r\n     */\r\n    #eventSource = null;\r\n\r\n    init() {\r\n        if (this.#eventSource !== null) {\r\n            return;\r\n        }\r\n\r\n        if (this.mode !== 'production') {\r\n            console.log('init ServerEventsSSEDriver. ', this.eventsUrl);\r\n        }\r\n\r\n        const url = this.eventsUrl + '&ts=' + Date.now();\r\n        this.#eventSource = new EventSource(url);\r\n\r\n        if (this.mode !== 'production') {\r\n            this.#eventSource.onopen = function (event) {\r\n                console.log('ServerEventsSSEDriver connection is open');\r\n            };\r\n        }\r\n\r\n        this.#eventSource.onmessage = (event) => {\r\n            const eventData = JSON.parse(event.data);\r\n            if (eventData.data !== undefined && (typeof eventData.data === 'string') && eventData.data !== '') {\r\n                eventData.data = JSON.parse(eventData.data);\r\n            }\r\n            eventData.eventId = event.lastEventId;\r\n            this.onEventTriggered(eventData);\r\n        };\r\n\r\n        if (this.mode !== 'production') {\r\n            this.#eventSource.onerror = function (event) {\r\n                console.log('ServerEventsSSEDriver connection error');\r\n            }\r\n        }\r\n    }\r\n}","import {BaseServerEventsDriver} from \"./BaseServerEventsDriver\";\r\n\r\n/**\r\n * Server events ajax driver\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class ServerEventsAjaxDriver extends BaseServerEventsDriver {\r\n    #timeOutPeriod = 6000; // 6 sec.\r\n\r\n    #timerId = null;\r\n\r\n    #inited = false;\r\n\r\n    init() {\r\n        if (this.#inited) {\r\n            return;\r\n        }\r\n\r\n        this.#inited = true;\r\n\r\n        if (this.mode !== 'production') {\r\n            console.log('init ServerEventsAjaxDriver ', this.eventsUrl);\r\n        }\r\n\r\n        this.#timerId = setTimeout(() => this.#getEvents(), 500);\r\n    }\r\n\r\n    async #getEvents() {\r\n        try {\r\n            const url = this.eventsUrl + '&ts=' + Date.now();\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`Response status: ${response.status}`);\r\n            }\r\n\r\n            const result = await response.json();\r\n\r\n            if (result.error !== undefined) {\r\n                if (result.error.code === 'driverDisabled') {\r\n                    if (this.mode !== 'production') {\r\n                        console.error(result.error.message);\r\n                    }\r\n                    // Do not send more requests\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (result.events !== undefined) {\r\n                result.events.forEach((event) => {\r\n                    event.eventId = event.id !== undefined ? event.id : null;\r\n                    this.onEventTriggered(event);\r\n                });\r\n            }\r\n\r\n            this.#timerId = setTimeout(() => this.#getEvents(), this.#timeOutPeriod);\r\n        } catch (error) {\r\n            console.log('ServerEventsAjaxDriver get events error: ' + error.message);\r\n            this.#timerId = setTimeout(() => this.#getEvents(), this.#timeOutPeriod);\r\n        }\r\n    }\r\n}","import {ServerEventsSSEDriver} from \"./ServerEventsSSEDriver\";\r\nimport {ServerEventsAjaxDriver} from \"./ServerEventsAjaxDriver\";\r\n\r\n/**\r\n * Base server events driver\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class ServerEventsDriverFactory {\r\n    #baseUrl = '/';\r\n\r\n    #mode = 'production'\r\n\r\n    constructor(baseUrl = null, mode = null) {\r\n        if (baseUrl !== null) {\r\n            this.#baseUrl = baseUrl;\r\n        }\r\n        if (mode !== null) {\r\n            this.#mode = mode;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} driverType\r\n     * @returns {ServerEventsSSEDriver|ServerEventsAjaxDriver}\r\n     */\r\n    getByType(driverType) {\r\n        let driver = null;\r\n\r\n        const serverSentEventsUrl = this.#baseUrl + '?n=server-events&a=sse';\r\n        const ajaxEventsUrl = this.#baseUrl + '?n=server-events&a=ajax&_ajax=1';\r\n\r\n        switch (driverType) {\r\n            case 'sse':\r\n                // Server-Sent events driver\r\n                driver = new ServerEventsSSEDriver(serverSentEventsUrl, this.#mode);\r\n                if (this.#mode !== 'production') {\r\n                    console.log('using ServerEventsSSEDriver', serverSentEventsUrl);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                driver = new ServerEventsAjaxDriver(ajaxEventsUrl, this.#mode);\r\n                if (this.#mode !== 'production') {\r\n                    console.log('using ServerEventsAjaxDriver', ajaxEventsUrl);\r\n                }\r\n        }\r\n\r\n        return driver;\r\n    }\r\n}","import {BaseServerEventsClient} from \"./BaseServerEventsClient\";\r\nimport {ServerEventsDriverFactory} from \"../driver/ServerEventsDriverFactory\";\r\n\r\n/**\r\n * Server events client\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class ServerEventsClient extends BaseServerEventsClient {\r\n    init() {\r\n        if (this.mode !== 'production') {\r\n            console.log('init ServerEventsClient');\r\n        }\r\n\r\n        const factory = new ServerEventsDriverFactory(getBaseHref(), this.mode);\r\n\r\n        const driver = factory.getByType(this.driverType, this.mode);\r\n        driver.addEventListener('event', (event) => {\r\n            this.onEventTriggered(event.detail);\r\n        });\r\n        driver.init();\r\n    }\r\n}","import {BaseServerEventsClient} from \"./BaseServerEventsClient\";\r\n\r\n/**\r\n * Shared worker server events client\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n * @link https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker\r\n */\r\nexport class ServerEventsSharedWorkerClient extends BaseServerEventsClient {\r\n    init() {\r\n        let workerUrl = '/js/sharedWorkerServerEvents.min.js';\r\n\r\n        if (this.mode !== 'production') {\r\n            console.log('init ServerEventsSharedWorkerClient: ' + workerUrl);\r\n        }\r\n\r\n        try {\r\n            const worker = new SharedWorker(workerUrl);\r\n            const port = worker.port;\r\n\r\n            port.postMessage({config: {mode: this.mode, driver: this.driverType, baseUrl: getBaseHref()}});\r\n\r\n            port.onmessage = (event) => {\r\n                if (this.mode !== 'production') {\r\n                    console.log('ServerSentEventsSharedWorker event', event.data);\r\n                }\r\n                this.onEventTriggered(event.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import {ServerEventsClient} from \"./client/ServerEventsClient\";\r\nimport {ServerEventsSharedWorkerClient} from \"./client/ServerEventsSharedWorkerClient\";\r\n\r\n/**\r\n * Server events\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n */\r\nexport class ServerEvents {\r\n    mode = 'develop'; // 'production';\r\n\r\n    /**\r\n     * @type {null|ServerEventsSharedWorkerClient|ServerEventsClient}\r\n     */\r\n    #client = null;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    #clientType = 'sharedWorker';\r\n\r\n    /**\r\n     * @type {string} 'sse' (for Server-Sent events) , 'ajax' or 'websocket' (not implemented yet)\r\n     */\r\n    #driverType = 'sse';\r\n\r\n    #observersRegistry = null;\r\n\r\n    constructor() {\r\n        this.#observersRegistry = new Map();\r\n        this.#driverType = cot.cfg.serverEvents;\r\n    }\r\n\r\n    /**\r\n     * @param {string} name\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    addObserver(name, event, callback) {\r\n        if (cot.cfg.serverEvents === 'none') {\r\n            return;\r\n        }\r\n\r\n        this.#observersRegistry.set(name, {\r\n            name: name,\r\n            event: event,\r\n            onEvent: callback\r\n        });\r\n\r\n        if (this.#client === null) {\r\n            this.#initClient();\r\n        }\r\n    }\r\n\r\n    #initClient() {\r\n        if (cot.cfg.serverEvents === 'none') {\r\n            return;\r\n        }\r\n\r\n        if (this.#clientType === 'sharedWorker' && (typeof SharedWorker !== undefined)) {\r\n            if (this.mode !== 'production') {\r\n                console.log('creating ServerEventsSharedWorkerClient');\r\n            }\r\n            this.#client = new ServerEventsSharedWorkerClient(this.#driverType, this.mode);\r\n        } else {\r\n            if (this.mode !== 'production') {\r\n                console.log('creating ServerEventsClient');\r\n            }\r\n            this.#client = new ServerEventsClient(this.#driverType, this.mode);\r\n        }\r\n\r\n        this.#client.addEventListener('event', (event) => {\r\n            this.#onEventTriggered(event.detail);\r\n        });\r\n    }\r\n\r\n    #onEventTriggered(eventData) {\r\n        if (this.mode !== 'production') {\r\n            console.log('Server triggered event', eventData);\r\n        }\r\n\r\n        this.#observersRegistry.forEach((observer) => {\r\n            if (\r\n                observer.event === eventData.event\r\n                && typeof observer.onEvent === 'function'\r\n            ) {\r\n                observer.onEvent(eventData);\r\n            }\r\n        });\r\n    }\r\n}","/**\r\n * Toast\r\n * Show Toasts programmatically\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n *\r\n * @link https://getbootstrap.com/docs/5.3/components/toasts/\r\n */\r\nexport class Toast {\r\n    static containerClass = 'toast-container position-fixed bottom-0 end-0 p-3';\r\n\r\n    title = '';\r\n    message = '';\r\n    hint = '';\r\n    type = '';\r\n    delay = 5000;\r\n\r\n    #container = null;\r\n\r\n    /**\r\n     * @param {String} message\r\n     * @param {String} title\r\n     * @param {String} hint\r\n     * @param {String} type\r\n     */\r\n    constructor(message, title = '', hint = '', type = '') {\r\n        if (window.bootstrap === undefined) {\r\n            console.error('Bootstrap is not found. It is required for use \"Toast\" component');\r\n            return;\r\n        }\r\n\r\n        this.title = title;\r\n        this.message = message;\r\n        this.hint = hint;\r\n        this.type = type;\r\n    }\r\n\r\n    show() {\r\n        if (this.#container === null) {\r\n            let container = document.getElementById('toast-container');\r\n            if (container === null) {\r\n                container = this.#createContainer();\r\n            }\r\n            this.#container = container;\r\n        }\r\n\r\n        const toastTitle = `<strong class=\"me-auto\">${this.title}</strong>`;\r\n        const toastHint = this.hint !== '' ? `<small>${this.hint}</small>` : '';\r\n        const backGround = this.type !== '' ? ` text-bg-${this.type}` : '';\r\n\r\n        const toastHTML = `<div class=\"toast${backGround}\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" `\r\n                + `data-bs-delay=\"${this.delay}\">`\r\n            + '<div class=\"toast-header\">'\r\n              + `${toastTitle}${toastHint}`\r\n              + '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>'\r\n            + '</div>'\r\n            + `<div class=\"toast-body\">${this.message}</div>`\r\n          + '</div>';\r\n\r\n        const toastWrapper = document.createElement('div');\r\n        toastWrapper.innerHTML = toastHTML;\r\n\r\n        const toastElement = toastWrapper.firstElementChild;\r\n\r\n        // Append the toast to the container\r\n        this.#container.appendChild(toastElement);\r\n\r\n        // Initialize the toast\r\n        const toast = new window.bootstrap.Toast(toastElement);\r\n        toast.show();\r\n\r\n        // Optionally remove the toast from the DOM after it hides\r\n        this.#container.lastElementChild.addEventListener('hidden.bs.toast', () => {\r\n            toastElement.remove();\r\n            if (this.#container.innerHTML === '') {\r\n                this.#container.remove();\r\n                this.#container = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    #createContainer() {\r\n        const result = document.createElement('div');\r\n        result.id = 'toast-container';\r\n        result.className = Toast.containerClass;\r\n        document.body.append(result);\r\n        return result;\r\n    }\r\n}","/**\r\n * Modal\r\n * Show Modal programmatically\r\n * @package Cotonti\r\n * @copyright (c) Cotonti Team\r\n *\r\n * @link https://getbootstrap.com/docs/5.3/components/modal/\r\n */\r\nexport class Modal {\r\n    title = '';\r\n    content = '';\r\n\r\n    /**\r\n     * @type {({label: String, onClick: function, closeOnClick: bool, type: string}|string)[]|null}\r\n     */\r\n    buttons = null;\r\n\r\n    /**\r\n     * Vertically centered\r\n     * @type {boolean}\r\n     */\r\n    centered = false;\r\n\r\n    dialogClass = 'modal-dialog';\r\n\r\n    /**\r\n     * @type {Element}\r\n     */\r\n    #element = null;\r\n\r\n    /**\r\n     * @param {String} content\r\n     * @param {String} title\r\n     * @param {({\r\n     *    label: String,\r\n     *    onClick: function|undefined,\r\n     *    closeOnClick: bool|undefined,\r\n     *    type: string|undefined,\r\n     *    btnType: string|undefined\r\n     *  }|string)[]|null} buttons\r\n     */\r\n    constructor(content, title = '', buttons = null) {\r\n        if (window.bootstrap === undefined) {\r\n            console.error('Bootstrap is not found. It is required for use \"Modal\" component');\r\n            return;\r\n        }\r\n\r\n        this.title = title;\r\n        this.content = content;\r\n        this.buttons = buttons;\r\n    }\r\n\r\n    show() {\r\n        let dialogClass = this.dialogClass;\r\n        if (this.centered) {\r\n            dialogClass += ' modal-dialog-centered';\r\n        }\r\n\r\n        const modalHTML = '<div class=\"modal fade\" id=\"CotontiDynamicModal\" tabindex=\"-1\" '\r\n                + 'aria-labelledby=\"CotontiDynamicModalLabel\" aria-hidden=\"true\">'\r\n          + `<div class=\"${dialogClass}\">`\r\n            + '<div class=\"modal-content\">'\r\n              + '<div class=\"modal-header\">'\r\n                + `<h5 class=\"modal-title\" id=\"CotontiDynamicModalLabel\">${this.title}</h5>`\r\n                + '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>'\r\n              + '</div>'\r\n              + `<div class=\"modal-body\">${this.content}</div>`\r\n              + '<div class=\"modal-footer\"></div>'\r\n            + '</div>'\r\n          + '</div>'\r\n        + '</div>';\r\n\r\n        const modalWrapper = document.createElement('div');\r\n        modalWrapper.innerHTML = modalHTML;\r\n        this.#element = modalWrapper.firstElementChild;\r\n\r\n        this.#addButtons();\r\n\r\n        // Append the modal to the body\r\n        document.body.appendChild(this.#element);\r\n\r\n        // Initialize and show the modal\r\n        const modal = new bootstrap.Modal(this.#element);\r\n        modal.show();\r\n\r\n        // Remove the modal from the DOM after it is hidden\r\n        this.#element.addEventListener('hidden.bs.modal', () => {\r\n            this.#element.remove();\r\n        });\r\n    }\r\n\r\n    #addButtons() {\r\n        const buttons = this.#buildButtons();\r\n\r\n        if (buttons === '' || buttons === []) {\r\n            return;\r\n        }\r\n\r\n        const container = this.#element.querySelector('.modal-footer');\r\n\r\n        if (typeof buttons === 'string') {\r\n            container.innerHTML = buttons;\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(buttons)) {\r\n            buttons.forEach((button) => {\r\n                if (typeof button === 'string') {\r\n                    container.innerHTML += button;\r\n                    return;\r\n                }\r\n                container.appendChild(button);\r\n            })\r\n        }\r\n    }\r\n\r\n    #buildButtons() {\r\n        const result = [];\r\n        let buttons = this.buttons;\r\n        if (buttons === []) {\r\n            return result;\r\n        }\r\n\r\n        if (buttons === null) {\r\n            return '<button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>';\r\n        }\r\n\r\n        if (typeof buttons === 'string') {\r\n            return buttons;\r\n        }\r\n\r\n        if (Array.isArray(buttons)) {\r\n            buttons.forEach((buttonData) => {\r\n                if (typeof buttonData === 'string') {\r\n                    result.push(buttonData);\r\n                    return;\r\n                }\r\n\r\n                const button = document.createElement('button');\r\n                if (buttonData.label !== undefined) {\r\n                    button.innerHTML = buttonData.label;\r\n                }\r\n\r\n                button.setAttribute('type', buttonData.btnType !== undefined ? buttonData.btnType : 'button');\r\n                button.classList.add('btn');\r\n\r\n                if (buttonData.type !== undefined) {\r\n                    button.classList.add('btn-' + buttonData.type);\r\n                }\r\n\r\n                if (buttonData.closeOnClick !== undefined && buttonData.closeOnClick === true) {\r\n                    button.setAttribute('data-bs-dismiss', 'modal');\r\n                }\r\n\r\n                if (buttonData.onClick !== undefined && typeof buttonData.onClick === 'function') {\r\n                    button.addEventListener('click', (event) => {return buttonData.onClick(event)});\r\n                }\r\n\r\n                result.push(button);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}","import {ServerEvents} from './serverEvents/ServerEvents.js';\r\nimport {Toast} from \"./Toast\";\r\nimport {Modal} from \"./Modal\";\r\n\r\n/**\r\n * Base Cotonti class\r\n */\r\nclass CotontiApplication\r\n{\r\n    cfg = {};\r\n    L = {};\r\n\r\n    #severEvents = null;\r\n\r\n    init(data) {\r\n        if (data.config !== undefined) {\r\n            this.cfg = data.config;\r\n        }\r\n\r\n        if (data.lang !== undefined) {\r\n            this.L = data.lang;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get Server Events object\r\n     * @returns {ServerEvents}\r\n     */\r\n    getServerEvents() {\r\n        if (this.#severEvents === null) {\r\n            this.#severEvents = new ServerEvents();\r\n        }\r\n        return this.#severEvents;\r\n    }\r\n\r\n    /**\r\n     * Show Confirm dialog modal\r\n     * @param {String} title\r\n     * @param {String} content\r\n     * @param {function} callback\r\n     * @param {String} okLabel\r\n     * @param {String} cancelLabel\r\n     * @todo translated default labels\r\n     */\r\n    confirm(title, content, callback, okLabel = 'Ok', cancelLabel = 'Cancel') {\r\n        this.modal(title, content, [\r\n            {label: okLabel, onClick: (event) => {return callback(event)}, type: 'primary', closeOnClick: true},\r\n            {label: cancelLabel, closeOnClick: true, type: 'secondary'}\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Get the Modal instance\r\n     * @param {String} content\r\n     * @param {String} title\r\n     * @param {({\r\n     *    label: String,\r\n     *    onClick: function|undefined,\r\n     *    closeOnClick: bool|undefined,\r\n     *    type: string|undefined,\r\n     *    btnType: string|undefined\r\n     *  }|string)[]|null} buttons\r\n     *  @returns Modal\r\n     */\r\n    getModal(content, title = '', buttons= null) {\r\n        return new Modal(content, title, buttons);\r\n    }\r\n\r\n    /**\r\n     * Show Modal programmatically\r\n     * @param {String} content\r\n     * @param {String} title\r\n     * @param {({\r\n     *    label: String,\r\n     *    onClick: function|undefined,\r\n     *    closeOnClick: bool|undefined,\r\n     *    type: string|undefined,\r\n     *    btnType: string|undefined\r\n     *  }|string)[]|null} buttons\r\n     *  @returns Modal\r\n     */\r\n    modal(content, title = '', buttons= null) {\r\n        const modal = this.getModal(content, title, buttons);\r\n        modal.show();\r\n        return modal;\r\n    }\r\n\r\n    /**\r\n     * Show Toasts programmatically\r\n     * @param {String} message\r\n     * @param {String} title\r\n     * @param {String} hint\r\n     * @param {String} type\r\n     * @returns Toast\r\n     */\r\n    getToast(message, title = '', hint = '', type = '') {\r\n        return new Toast(message, title, hint, type);\r\n    }\r\n\r\n    /**\r\n     * Show Toasts programmatically\r\n     * @param {String} message\r\n     * @param {String} title\r\n     * @param {String} hint\r\n     * @param {String} type\r\n     * @param {Number} delay\r\n     */\r\n    toast(message, title = '', hint = '', type = '', delay = 5000) {\r\n        const toast = this.getToast(message, title, hint, type);\r\n\r\n        if (delay !== null) {\r\n            toast.delay = delay\r\n        }\r\n\r\n        toast.show();\r\n        return toast;\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from /index.php?n=main&a=get\r\n     * Can be useful, for example when it is needed to load some dynamic content to cached page\r\n     *\r\n     * Example:\r\n     * cot.loadData(['captcha', 'x']).then(result => {\r\n     *    console.log(result);\r\n     * });\r\n     *\r\n     * @param what Array or string. Data to load. For example, ['captcha', 'x'] (x - anti XSS parameter value)\r\n     * @returns {Promise<{}>}\r\n     */\r\n    async loadData(what) {\r\n        if (!what) {\r\n            return {};\r\n        }\r\n\r\n        if (this.loadedData === undefined) {\r\n            this.loadedData = {};\r\n        }\r\n\r\n        let dataToLoad = [];\r\n\r\n        if (typeof what === 'string' || what instanceof String) {\r\n            what = [what];\r\n        }\r\n\r\n        for (let item of what) {\r\n            if (!(item in this.loadedData)) {\r\n                dataToLoad.push(item);\r\n            }\r\n        }\r\n\r\n        if (dataToLoad.length > 0) {\r\n            // @todo change to system controller when it will be implemented\r\n            let params = new URLSearchParams({n: 'main', a: 'get'});\r\n\r\n            dataToLoad.forEach((item, index, array) => {\r\n                params.append('data[' + index + ']', item);\r\n            });\r\n            params.append('_ajax', 1);\r\n            try {\r\n                let response = await fetch('index.php?' + params.toString());\r\n\r\n                if (response.ok) {\r\n                    const responseData = await response.json();\r\n                    if (responseData.success) {\r\n                        for (const key in responseData.data) {\r\n                            this.loadedData[key] = responseData.data[key];\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    // HTTP error\r\n                }\r\n            } catch (error) {\r\n                // Request error\r\n            }\r\n        }\r\n\r\n        let result = {};\r\n        for (let item of what) {\r\n            if ((item in this.loadedData)) {\r\n                result[item] = this.loadedData[item];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Load captcha via ajax. Used on cached pages.\r\n     */\r\n    loadCaptcha() {\r\n        this.loadData(['captcha', 'x']).then(result => {\r\n            let captchaElements = document.querySelectorAll('.captcha-place-holder');\r\n            for (let element of captchaElements) {\r\n                element.innerHTML = result.captcha;\r\n                this.executeScriptElements(element);\r\n                element.classList.remove('captcha-place-holder', 'loading');\r\n                element.classList.add('captcha');\r\n\r\n                const form = element.closest('form');\r\n                if (form !== null) {\r\n                    let inputX = form.querySelector('input[type=\"hidden\"][name=\"x\"]');\r\n                    if (inputX !== null) {\r\n                        inputX.setAttribute('value', result.x);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * If you append <script> tags to the elements of the finished DOM document, they will not be executed automatically.\r\n     * The method executes <script> scripts nested in the specified element\r\n     * @param containerElement Node\r\n     */\r\n    executeScriptElements(containerElement) {\r\n        const scriptElements = containerElement.querySelectorAll('script');\r\n\r\n        Array.from(scriptElements).forEach((scriptElement) => {\r\n            const clonedElement = document.createElement('script');\r\n            Array.from(scriptElement.attributes).forEach((attribute) => {\r\n                clonedElement.setAttribute(attribute.name, attribute.value);\r\n            });\r\n            clonedElement.text = scriptElement.text;\r\n            scriptElement.parentNode.replaceChild(clonedElement, scriptElement);\r\n        });\r\n    }\r\n}\r\n\r\nwindow.cot = new CotontiApplication();\r\n"]}